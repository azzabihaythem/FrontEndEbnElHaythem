swagger: '2.0'
info:
  description: Api Documentation
  version: '1.0'
  title: Api Documentation
  termsOfService: urn:tos
  contact: {}
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0
host: localhost:8080
basePath: /
tags:
  - name: basic-error-controller
    description: Basic Error Controller
  - name: excel-controller
    description: Excel Controller
  - name: hal-explorer
    description: Hal Explorer
  - name: operation-handler
    description: Operation Handler
  - name: patient-controller
    description: Patient Controller
  - name: profile-controller
    description: Profile Controller
  - name: seance-controller
    description: Seance Controller
  - name: user-controller
    description: User Controller
  - name: web-mvc-links-handler
    description: Web Mvc Links Handler
paths:
  /:
    get:
      tags:
        - hal-explorer
      summary: index
      operationId: indexUsingGET
      produces:
        - text/html
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/View'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
  /actuator:
    get:
      tags:
        - web-mvc-links-handler
      summary: links
      operationId: linksUsingGET
      produces:
        - application/json
        - application/vnd.spring-boot.actuator.v2+json
        - application/vnd.spring-boot.actuator.v3+json
      responses:
        '200':
          description: OK
          schema:
            type: object
            additionalProperties:
              type: object
              additionalProperties:
                $ref: '#/definitions/Link'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
  /actuator/health:
    get:
      tags:
        - operation-handler
      summary: handle
      operationId: handleUsingGET
      produces:
        - application/json
        - application/vnd.spring-boot.actuator.v2+json
        - application/vnd.spring-boot.actuator.v3+json
      parameters:
        - in: body
          name: body
          description: body
          required: false
          schema:
            type: object
            additionalProperties:
              type: string
      responses:
        '200':
          description: OK
          schema:
            type: object
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
  /actuator/health/**:
    get:
      tags:
        - operation-handler
      summary: handle
      operationId: handleUsingGET_1
      produces:
        - application/json
        - application/vnd.spring-boot.actuator.v2+json
        - application/vnd.spring-boot.actuator.v3+json
      parameters:
        - in: body
          name: body
          description: body
          required: false
          schema:
            type: object
            additionalProperties:
              type: string
      responses:
        '200':
          description: OK
          schema:
            type: object
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
  /actuator/info:
    get:
      tags:
        - operation-handler
      summary: handle
      operationId: handleUsingGET_2
      produces:
        - application/json
        - application/vnd.spring-boot.actuator.v2+json
        - application/vnd.spring-boot.actuator.v3+json
      parameters:
        - in: body
          name: body
          description: body
          required: false
          schema:
            type: object
            additionalProperties:
              type: string
      responses:
        '200':
          description: OK
          schema:
            type: object
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
  /error:
    get:
      tags:
        - basic-error-controller
      summary: errorHtml
      operationId: errorHtmlUsingGET
      produces:
        - text/html
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/ModelAndView'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
    head:
      tags:
        - basic-error-controller
      summary: errorHtml
      operationId: errorHtmlUsingHEAD
      consumes:
        - application/json
      produces:
        - text/html
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/ModelAndView'
        '204':
          description: No Content
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
    post:
      tags:
        - basic-error-controller
      summary: errorHtml
      operationId: errorHtmlUsingPOST
      consumes:
        - application/json
      produces:
        - text/html
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/ModelAndView'
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
    put:
      tags:
        - basic-error-controller
      summary: errorHtml
      operationId: errorHtmlUsingPUT
      consumes:
        - application/json
      produces:
        - text/html
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/ModelAndView'
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
    delete:
      tags:
        - basic-error-controller
      summary: errorHtml
      operationId: errorHtmlUsingDELETE
      produces:
        - text/html
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/ModelAndView'
        '204':
          description: No Content
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
    options:
      tags:
        - basic-error-controller
      summary: errorHtml
      operationId: errorHtmlUsingOPTIONS
      consumes:
        - application/json
      produces:
        - text/html
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/ModelAndView'
        '204':
          description: No Content
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
    patch:
      tags:
        - basic-error-controller
      summary: errorHtml
      operationId: errorHtmlUsingPATCH
      consumes:
        - application/json
      produces:
        - text/html
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/ModelAndView'
        '204':
          description: No Content
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
  /explorer:
    get:
      tags:
        - hal-explorer
      summary: explorer
      operationId: explorerUsingGET
      produces:
        - '*/*'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/View'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
  /profile:
    get:
      tags:
        - profile-controller
      summary: listAllFormsOfMetadata
      operationId: listAllFormsOfMetadataUsingGET
      produces:
        - '*/*'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/RepresentationModel«object»'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
    options:
      tags:
        - profile-controller
      summary: profileOptions
      operationId: profileOptionsUsingOPTIONS
      consumes:
        - application/json
      produces:
        - '*/*'
      responses:
        '200':
          description: OK
          schema:
            type: object
        '204':
          description: No Content
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
  /v1/borderau/month/{month}/year/{year}:
    post:
      tags:
        - seance-controller
      summary: getBorderauPatients
      operationId: getBorderauPatientsUsingPOST
      consumes:
        - application/json
      produces:
        - '*/*'
      parameters:
        - name: Authorization
          in: header
          description: Authorization
          required: true
          type: string
        - name: month
          in: path
          description: month
          required: true
          type: integer
          format: int32
        - in: body
          name: patientIds
          description: patientIds
          required: true
          schema:
            type: array
            items:
              type: integer
              format: int64
        - name: year
          in: path
          description: year
          required: true
          type: integer
          format: int32
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/InputStreamResource'
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
  /v1/clinique:
    post:
      tags:
        - patient-controller
      summary: postClinique
      operationId: postCliniqueUsingPOST
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: body
          name: clinique
          description: clinique
          required: true
          schema:
            $ref: '#/definitions/Clinique'
      responses:
        '200':
          description: OK
          schema:
            type: object
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
  /v1/excel:
    post:
      tags:
        - excel-controller
      summary: excelReader
      operationId: excelReaderUsingPOST
      consumes:
        - multipart/form-data
      produces:
        - '*/*'
      parameters:
        - in: body
          name: file
          description: file
          required: true
          schema:
            type: string
            format: binary
      responses:
        '200':
          description: OK
          schema:
            type: string
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
  /v1/list/factures/month/{month}/year/{year}:
    post:
      tags:
        - seance-controller
      summary: getFacturePatients
      operationId: getFacturePatientsUsingPOST
      consumes:
        - application/json
      produces:
        - '*/*'
      parameters:
        - name: Authorization
          in: header
          description: Authorization
          required: true
          type: string
        - name: month
          in: path
          description: month
          required: true
          type: integer
          format: int32
        - in: body
          name: patientIds
          description: patientIds
          required: true
          schema:
            type: array
            items:
              type: string
        - name: year
          in: path
          description: year
          required: true
          type: integer
          format: int32
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/InputStreamResource'
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
  /v1/list/seances/typeSeanceId/{typeSeanceId}/startDate/{startDate}/endDate/{endDate}:
    post:
      tags:
        - seance-controller
      summary: postSeancesOfListPatient
      operationId: postSeancesOfListPatientUsingPOST
      consumes:
        - application/json
      produces:
        - '*/*'
      parameters:
        - name: endDate
          in: path
          description: endDate
          required: true
          type: string
          format: date
        - in: body
          name: patientIds
          description: patientIds
          required: true
          schema:
            type: array
            items:
              type: string
        - name: startDate
          in: path
          description: startDate
          required: true
          type: string
          format: date
        - name: typeSeanceId
          in: path
          description: typeSeanceId
          required: true
          type: string
      responses:
        '200':
          description: OK
          schema:
            type: object
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
  /v1/patients:
    post:
      tags:
        - patient-controller
      summary: postPatient
      operationId: postPatientUsingPOST
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: body
          name: patient
          description: patient
          required: true
          schema:
            $ref: '#/definitions/Patient'
      responses:
        '200':
          description: OK
          schema:
            type: object
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
    put:
      tags:
        - patient-controller
      summary: updatePatient
      operationId: updatePatientUsingPUT
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: body
          name: patient
          description: patient
          required: true
          schema:
            $ref: '#/definitions/Patient'
      responses:
        '200':
          description: OK
          schema:
            type: object
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
  /v1/patients/all/active/{active}:
    put:
      tags:
        - patient-controller
      summary: updateAllPatientStatus
      operationId: updateAllPatientStatusUsingPUT
      consumes:
        - application/json
      produces:
        - '*/*'
      parameters:
        - name: active
          in: path
          description: active
          required: true
          type: boolean
        - name: Authorization
          in: header
          description: Authorization
          required: true
          type: string
      responses:
        '200':
          description: OK
          schema:
            type: object
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
  /v1/patients/seances/month/{month}/year/{year}:
    post:
      tags:
        - patient-controller
      summary: postPatientAndSeance
      operationId: postPatientAndSeanceUsingPOST
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: Authorization
          in: header
          description: Authorization
          required: true
          type: string
        - name: month
          in: path
          description: month
          required: true
          type: integer
          format: int32
        - in: body
          name: patientAndAbscenceDto
          description: patientAndAbscenceDto
          required: true
          schema:
            $ref: '#/definitions/PatientAndAbscenceDto'
        - name: year
          in: path
          description: year
          required: true
          type: integer
          format: int32
      responses:
        '200':
          description: OK
          schema:
            type: object
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
  /v1/patients/{id}:
    get:
      tags:
        - patient-controller
      summary: getPatient
      operationId: getPatientUsingGET
      produces:
        - '*/*'
      parameters:
        - name: id
          in: path
          description: id
          required: true
          type: integer
          format: int64
      responses:
        '200':
          description: OK
          schema:
            type: object
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
    delete:
      tags:
        - patient-controller
      summary: deletePatient
      operationId: deletePatientUsingDELETE
      produces:
        - '*/*'
      parameters:
        - name: id
          in: path
          description: id
          required: true
          type: integer
          format: int64
      responses:
        '200':
          description: OK
          schema:
            type: object
        '204':
          description: No Content
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
  /v1/patients/{page}/{numberOfElements}:
    get:
      tags:
        - patient-controller
      summary: getPatientPage
      operationId: getPatientPageUsingGET
      produces:
        - '*/*'
      parameters:
        - name: numberOfElements
          in: path
          description: numberOfElements
          required: true
          type: integer
          format: int32
        - name: page
          in: path
          description: page
          required: true
          type: integer
          format: int32
      responses:
        '200':
          description: OK
          schema:
            type: object
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
  /v1/patients/{patientId}/active/{active}:
    put:
      tags:
        - patient-controller
      summary: deactivatePatient
      operationId: deactivatePatientUsingPUT
      consumes:
        - application/json
      produces:
        - '*/*'
      parameters:
        - name: active
          in: path
          description: active
          required: true
          type: boolean
        - name: patientId
          in: path
          description: patientId
          required: true
          type: integer
          format: int64
      responses:
        '200':
          description: OK
          schema:
            type: object
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
  /v1/seances:
    post:
      tags:
        - seance-controller
      summary: postSeance
      operationId: postSeanceUsingPOST
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: body
          name: seance
          description: seance
          required: true
          schema:
            $ref: '#/definitions/Seance'
      responses:
        '200':
          description: OK
          schema:
            type: object
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
  /v1/seances/{seanceId}:
    delete:
      tags:
        - seance-controller
      summary: deleteSeance
      operationId: deleteSeanceUsingDELETE
      produces:
        - application/json
      parameters:
        - name: seanceId
          in: path
          description: seanceId
          required: true
          type: integer
          format: int64
      responses:
        '200':
          description: OK
          schema:
            type: object
        '204':
          description: No Content
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
  /v1/signup:
    post:
      tags:
        - user-controller
      summary: signUp
      operationId: signUpUsingPOST
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: body
          name: user
          description: user
          required: true
          schema:
            $ref: '#/definitions/User'
      responses:
        '200':
          description: OK
          schema:
            type: object
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
  /v1/txt/borderau/month/{month}/year/{year}:
    get:
      tags:
        - seance-controller
      summary: txtResponse
      operationId: txtResponseUsingGET
      produces:
        - '*/*'
      parameters:
        - name: Authorization
          in: header
          description: Authorization
          required: true
          type: string
        - name: month
          in: path
          description: month
          required: true
          type: integer
          format: int32
        - name: year
          in: path
          description: year
          required: true
          type: integer
          format: int32
      responses:
        '200':
          description: OK
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
definitions:
  Clinique:
    type: object
    properties:
      active:
        type: boolean
      adress:
        type: string
      banqueName:
        type: string
      banqueNumber:
        type: string
      codeBureauxRegional:
        type: string
      codeCentre:
        type: string
      creationDate:
        type: string
        format: date-time
      employNumber:
        type: string
      id:
        type: integer
        format: int64
      nom:
        type: string
      registreDeCmmerce:
        type: string
      tel:
        type: string
      tva:
        type: string
      updateDate:
        type: string
        format: date-time
    title: Clinique
  InputStream:
    type: object
    title: InputStream
  InputStreamResource:
    type: object
    properties:
      description:
        type: string
      file:
        type: file
      filename:
        type: string
      inputStream:
        $ref: '#/definitions/InputStream'
      open:
        type: boolean
      readable:
        type: boolean
      uri:
        type: string
        format: uri
      url:
        type: string
        format: url
    title: InputStreamResource
  Link:
    type: object
    properties:
      href:
        type: string
      templated:
        type: boolean
    title: Link
  Links:
    type: object
    properties:
      empty:
        type: boolean
    title: Links
  ModelAndView:
    type: object
    properties:
      empty:
        type: boolean
      model:
        type: object
      modelMap:
        type: object
        additionalProperties:
          type: object
      reference:
        type: boolean
      status:
        type: string
        enum:
          - ACCEPTED
          - ALREADY_REPORTED
          - BAD_GATEWAY
          - BAD_REQUEST
          - BANDWIDTH_LIMIT_EXCEEDED
          - CHECKPOINT
          - CONFLICT
          - CONTINUE
          - CREATED
          - DESTINATION_LOCKED
          - EXPECTATION_FAILED
          - FAILED_DEPENDENCY
          - FORBIDDEN
          - FOUND
          - GATEWAY_TIMEOUT
          - GONE
          - HTTP_VERSION_NOT_SUPPORTED
          - IM_USED
          - INSUFFICIENT_SPACE_ON_RESOURCE
          - INSUFFICIENT_STORAGE
          - INTERNAL_SERVER_ERROR
          - I_AM_A_TEAPOT
          - LENGTH_REQUIRED
          - LOCKED
          - LOOP_DETECTED
          - METHOD_FAILURE
          - METHOD_NOT_ALLOWED
          - MOVED_PERMANENTLY
          - MOVED_TEMPORARILY
          - MULTIPLE_CHOICES
          - MULTI_STATUS
          - NETWORK_AUTHENTICATION_REQUIRED
          - NON_AUTHORITATIVE_INFORMATION
          - NOT_ACCEPTABLE
          - NOT_EXTENDED
          - NOT_FOUND
          - NOT_IMPLEMENTED
          - NOT_MODIFIED
          - NO_CONTENT
          - OK
          - PARTIAL_CONTENT
          - PAYLOAD_TOO_LARGE
          - PAYMENT_REQUIRED
          - PERMANENT_REDIRECT
          - PRECONDITION_FAILED
          - PRECONDITION_REQUIRED
          - PROCESSING
          - PROXY_AUTHENTICATION_REQUIRED
          - REQUESTED_RANGE_NOT_SATISFIABLE
          - REQUEST_ENTITY_TOO_LARGE
          - REQUEST_HEADER_FIELDS_TOO_LARGE
          - REQUEST_TIMEOUT
          - REQUEST_URI_TOO_LONG
          - RESET_CONTENT
          - SEE_OTHER
          - SERVICE_UNAVAILABLE
          - SWITCHING_PROTOCOLS
          - TEMPORARY_REDIRECT
          - TOO_EARLY
          - TOO_MANY_REQUESTS
          - UNAUTHORIZED
          - UNAVAILABLE_FOR_LEGAL_REASONS
          - UNPROCESSABLE_ENTITY
          - UNSUPPORTED_MEDIA_TYPE
          - UPGRADE_REQUIRED
          - URI_TOO_LONG
          - USE_PROXY
          - VARIANT_ALSO_NEGOTIATES
      view:
        $ref: '#/definitions/View'
      viewName:
        type: string
    title: ModelAndView
  Patient:
    type: object
    properties:
      active:
        type: boolean
      affile:
        type: string
      createUser:
        type: string
      creationDate:
        type: string
        format: date-time
      desactivationDate:
        type: string
        format: date-time
      doit:
        type: string
      id:
        type: integer
        format: int64
      localPatient:
        type: boolean
      numAffiliation:
        type: string
      priseEnCharges:
        type: array
        items:
          $ref: '#/definitions/PriseEnCharge'
      seanceDays:
        type: array
        uniqueItems: true
        items:
          type: string
          enum:
            - FRIDAY
            - MONDAY
            - SATURDAY
            - SUNDAY
            - THURSDAY
            - TUESDAY
            - WEDNESDAY
      updateDate:
        type: string
        format: date-time
      updateUser:
        type: string
      user:
        $ref: '#/definitions/User'
    title: Patient
  PatientAndAbscenceDto:
    type: object
    properties:
      abscence:
        type: array
        items:
          type: integer
          format: int32
      borederauNumber:
        type: string
      factureNumber:
        type: string
      patient:
        $ref: '#/definitions/Patient'
      typeSeanceId:
        type: string
    title: PatientAndAbscenceDto
  PriseEnCharge:
    type: object
    properties:
      clinique:
        $ref: '#/definitions/Clinique'
      createUser:
        type: string
      creationDate:
        type: string
        format: date-time
      endDate:
        type: string
        format: date
      id:
        type: integer
        format: int64
      number:
        type: string
      startDate:
        type: string
        format: date
      updateDate:
        type: string
        format: date-time
      updateUser:
        type: string
    title: PriseEnCharge
  RepresentationModel«object»:
    type: object
    properties:
      links:
        $ref: '#/definitions/Links'
    title: RepresentationModel«object»
  Role:
    type: object
    properties:
      id:
        type: integer
        format: int64
      role:
        type: string
    title: Role
  Seance:
    type: object
    properties:
      createUser:
        type: string
      creationDate:
        type: string
        format: date-time
      date:
        type: string
        format: date
      id:
        type: integer
        format: int64
      patient:
        $ref: '#/definitions/Patient'
      seanceType:
        $ref: '#/definitions/SeanceType'
      updateDate:
        type: string
        format: date-time
      updateUser:
        type: string
    title: Seance
  SeanceType:
    type: object
    properties:
      EXONERE:
        type: string
      MSP:
        type: string
      MTHTAXE:
        type: string
      MTTVA:
        type: string
      createUser:
        type: string
      creationDate:
        type: string
        format: date-time
      exonere:
        type: string
      id:
        type: integer
        format: int64
      msp:
        type: string
      mthtaxe:
        type: string
      mttva:
        type: string
      typeName:
        type: string
      updateDate:
        type: string
        format: date-time
      updateUser:
        type: string
    title: SeanceType
  User:
    type: object
    properties:
      active:
        type: boolean
      birthDate:
        type: string
        format: date-time
      clinique:
        $ref: '#/definitions/Clinique'
      creationDate:
        type: string
        format: date-time
      firstName:
        type: string
      id:
        type: integer
        format: int64
      lastName:
        type: string
      login:
        type: string
      password:
        type: string
      roles:
        type: array
        items:
          $ref: '#/definitions/Role'
      updateDate:
        type: string
        format: date-time
    title: User
  View:
    type: object
    properties:
      contentType:
        type: string
    title: View
